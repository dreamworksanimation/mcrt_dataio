Import('env')
from os import path

modName = path.basename(path.abspath('..'))
libName = path.basename(path.abspath('.'))
# --------------------------------------------------------------------------
name       = modName+'_'+libName
sources    = env.DWAGlob('*.cc')
incdir     = [env.Dir('#include').srcnode()]
components = [
	   'common_fb_util',
	   'common_grid_util',
	   'common_platform',
	   'engine_mcrt',
           'mcrt_messages',
           'message_api',
	   'render_cache',
	   'render_util',
	   'scene_rdl2',
	   'tbb'
	   ]

# --------------------------------------------------------------------------
publicHeaders = [
	      'FbMsgMultiChans.h',
	      'FbMsgMultiFrames.h',
	      'FbMsgSingleChan.h',
	      'FbMsgSingleFrame.h',
	      'GlobalNodeInfo.h',
	      'MergeActionTracker.h',
	      'MergeFbSender.h',
	      'MergeSequenceDequeue.h',
	      'MergeSequenceEnqueue.h',
	      'MergeSequenceKey.h',
	      'MergeStats.h',
	      'MsgSendHandler.h'
	      ]
env.DWAInstallInclude(publicHeaders, 'mcrt_dataio/engine/merger')
env.DWAUseComponents(components)
env.Prepend (CPPPATH=incdir,LIBS=["ssl"])
lib = env.DWASharedLibrary(name, sources)
target = env.DWAInstallLib(lib)
env.DWAComponent(name, LIBS=target+["ssl"], CPPPATH=incdir, COMPONENTS=components)
env.DWAInstallSConscriptStub(name, LIBS=target+["ssl"],
                             CPPPATH=[env.Dir('$INSTALL_DIR/include')],
                             COMPONENTS=components)
env.DWALinkValidate(name)
